[{"/home/anupam/work/project/cypo/src/index.tsx":"1","/home/anupam/work/project/cypo/src/App.tsx":"2","/home/anupam/work/project/cypo/src/reportWebVitals.ts":"3"},{"size":500,"mtime":1611085561249,"results":"4","hashOfConfig":"5"},{"size":5396,"mtime":1611166597873,"results":"6","hashOfConfig":"5"},{"size":425,"mtime":1611085561249,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iuy50c",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anupam/work/project/cypo/src/index.tsx",[],"/home/anupam/work/project/cypo/src/App.tsx",["15","16"],"import './App.css';\nimport { useState, useEffect } from 'react';\nimport Fuse from 'fuse.js';\nimport { TextField, InputAdornment, Container, Grid, Accordion,\n    AccordionSummary, AccordionDetails, Typography,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from '@material-ui/icons';\n\nexport interface CoinGeckoApi {\n    //id\t\"bitcoin\"\n    //symbol\t\"btc\"\n    //name\t\"Bitcoin\"\n    //image\t\"https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1547033579\"\n    //current_price\t35130\n    //market_cap\t653611312633\n    //market_cap_rank\t1\n    //fully_diluted_valuation\t737738793910\n    //total_volume\t50198011517\n    //high_24h\t37690\n    //low_24h\t35021\n    //price_change_24h\t-1422.00571619\n    //price_change_percentage_24h\t-3.89032\n    //market_cap_change_24h\t-26813280208.433838\n    //market_cap_change_percentage_24h\t-3.94067\n    //circulating_supply\t18605281\n    //total_supply\t21000000\n    //max_supply\t21000000\n    //ath\t41940\n    //ath_change_percentage\t-16.23667\n    //ath_date\t\"2021-01-08T15:05:37.863Z\"\n    //atl\t67.81\n    //atl_change_percentage\t51707.89977\n    //atl_date\t\"2013-07-06T00:00:00.000Z\"\n    //roi\tnull\n    //last_updated\t\"2021-01-20T04:19:36.500Z\"\n    id: string,\n    symbol: string,\n    name: string,\n    image: string,\n    current_price: number,\n    market_cap: number,\n    market_cap_rank: number\n    fully_diluted_valuation: number,\n    total_volume: number,\n    high_24h: number,\n    low_24h: number,\n    price_change_24h: number,\n    price_change_percentage_24h: number,\n    market_cap_change_24h: number,\n    market_cap_change_percentage_24h: number,\n    circulating_supply: number,\n    total_supply: number,\n    max_supply: number,\n    ath: number,\n    ath_change_percentage: number,\n    ath_date: Date,\n    atl: number,\n    atl_change_percentage: number,\n    atl_date: Date,\n    roi: null,\n    last_updated: Date,\n};\n\nfunction App() {\n    const [data, setData]: [\n        CoinGeckoApi[] | undefined, \n        (data: CoinGeckoApi[])=>void\n    ] = useState();\n    const [displayData, setDisplayData]: [\n        CoinGeckoApi[] | undefined,\n        (data: CoinGeckoApi[])=>void\n    ] = useState();\n    const [searchValue, setSearchValue]: [string, any] = useState(\"\");\n\n    const handleInput = (event: any) => {\n        setSearchValue(event.target.value);\n    };\n\n    const updateSearchResultFuse = () => {\n        if (data) {\n            const fuseOptions = {\n                keys: [\n                    \"id\"\n                ]\n            }\n            type FuseResult = {\n                item: CoinGeckoApi,\n                refIndex: number,\n                score: number\n            };\n            const fuse = new Fuse(data, fuseOptions);\n            if (searchValue) {\n                const searchResult: FuseResult[] = fuse.search(searchValue) as FuseResult[];\n                const result: CoinGeckoApi[] = searchResult.map((x: FuseResult) => x.item);\n                setDisplayData(result);\n            } else {\n                setDisplayData(data);\n            }\n        }\n    };\n\n    const updateSearchResult = () => {\n        if (data) {\n            const searchResult = data.filter((obj: CoinGeckoApi) => obj.id.includes(searchValue));\n            setDisplayData(searchResult);\n        }\n    };\n\n    const fetchData = () => {\n        fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n        .then(data => data.json())\n        .then(data => setData(data));\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (data) {\n            setDisplayData(data);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        //updateSearchResult();\n        updateSearchResultFuse();\n    }, [searchValue]);\n\n    return (\n        <Container style={{marginTop: \"10px\"}}>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"stretch\" >\n                { /*<input type=\"text\" className=\"search-box\" onChange={handleInput} /> */}\n                <Grid item>\n                    <TextField \n                        variant=\"outlined\" \n                        onChange={handleInput} \n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                </Grid>\n                {console.log(displayData)}\n                {displayData ? displayData.map((elem: any) => {\n                    return (\n                        <Accordion key={elem.id} >\n                            <AccordionSummary>\n                                <img src={elem.image} alt=\"not found\" className=\"api-image\" style={{marginRight:\"10px\"}} />\n                                <Typography variant=\"h6\">{elem.name}</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                Current Price: ${elem.current_price}\n                            </AccordionDetails>\n                        </Accordion>\n                    );\n                }) : null}\n            </Grid>\n        </Container>\n    );\n}\n\nexport default App;\n","/home/anupam/work/project/cypo/src/reportWebVitals.ts",[],{"ruleId":"17","severity":1,"message":"18","line":102,"column":11,"nodeType":"19","messageId":"20","endLine":102,"endColumn":29},{"ruleId":"21","severity":1,"message":"22","line":128,"column":8,"nodeType":"23","endLine":128,"endColumn":21,"suggestions":"24"},"@typescript-eslint/no-unused-vars","'updateSearchResult' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateSearchResultFuse'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [searchValue, updateSearchResultFuse]",{"range":"28","text":"29"},[3758,3771],"[searchValue, updateSearchResultFuse]"]